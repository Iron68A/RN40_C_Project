Algorithmes pour la gestion d'une population (Fichier population.c)

• Initialiser de manière aléatoire la liste d'Individus.

Entrée : Une liste chainée Population vide : P / Une taille de Population : TaillePop / Longueur d'un individu : longIndiv
Sortie : Une liste chainée Population composé d'individu 

InitPopulation(int TaillePop, int longIndiv) --> population P
	P = créerpopulation()
	Pour i allant de 0 à TaillePop faire 
		AjoutTetePop(P,creerIndividuR(longIndiv))
		Incrémenter i
	Fin pour
	InitPopulation(TaillePop,longIndiv) = P
Fin 
 
• Ajouter en tete un Individus dans une population.

AjoutTetePop(Population P,Individu individu) --> Population P
	elem2 = créerelem2()
	elem2-->individu = individu
	elem2-->suivant = P-->premier
	p-->premier = elem2
	AjoutTetePop(P,individu) = P

• Trier la liste par Qualité décroissante des Individus au moyen de Quicksort (voir ci-dessous). On utilisera pour cela
la fonction Qualité définie sur le type abstrait Individu.

Entrée : Une population : P
Sortie : Une population triée 
Quicksort( population P) --> Population trié
	si estVide(P) alors Quicksort(P) = P
	L1 = Créer Population 
	L2 = Créer Population 
	diviser(P,L1,L2)
	QuickSort(reste(P)) = QuickSort(L1)
	QuickSort(reste(p)) = QuickSort(L2)
	L1 = Concatener(L1,L2);
	P = tete(L1);
	

•Créer deux listes a partir d'une autre liste 

Entrée : Deux listes de populations a remplire : L1 et L2 / La liste de population avec des individus : P
Sortie : Une population triée 
diviser(population P, population L1, population L2)
	temp = tete(P) 
	tant que ! estNull(temp) faire :
		si calculQualiteIndividu(individu(temp))<=calculQualiteIndividu(individu(P)) alors :
			l1.AjoutFin(individu(temp))
		sinon :
			l2.AjoutFin(individu(temp))
	Fin tant que
Fin

•Concatener deux listes 

Entrée : 2 populartions : L1 et  L2
Sortie : 3 ème population

concat(population L1, population L2) --> populations  
Si estVide(L1) alors :
	concat(L1,L2) = L2
Sinon Si estVide(L2) alors :
	concat(L1,L2) = L1
Sinon : 
	concat(L1,L2) = AjoutFinPop(L1,concat(L1,  reste(L2)))




• Sélectionner les meilleurs Individus de la Population en tronquant la liste et en la complétant par recopie des
tSelect premiers éléments.