Algorithmes pour la gestion d'une population (Fichier population.c)

• Initialiser de manière aléatoire la liste d'Individus.

Entrée : Une liste chainée Population vide : P / Une taille de Population : TaillePop / Longueur d'un individu : longIndiv
Sortie : Une liste chainée Population composé d'individu 

creerPopulation(int TaillePop, int longIndiv) --> population P
	P = créerpopulation()
	Pour i allant de 0 à TaillePop faire 
		AjoutTetePop(P,creerIndividuR(longIndiv))
		Incrémenter i
	Fin pour
	creerPopulation(TaillePop,longIndiv) = P
Fin 
 
• Ajouter en tete un Individus dans une population.

AjoutTetePop(P : Population ,individu : Individu ) --> P : Population
	individu(elementPop) = individu
	succ(elementPop) = tete(P)
	tete(p) = elem2
	AjoutTetePop(P,individu) = P

• Ajouter en queu un Individus dans une population.
AjoutqueuePop(pop : Population ,indiv : Individu 
	individu(elementPop) = individu
	succ(elementPop) = indéfini
	si estvide(tete(pop)) alors : 
		tete(pop) = elementPop
	sinon
		elementPop2 = tete(pop)
		tantque !estvide(succ(elementPop2)) faire 
			elementPop2 = succ(elementPop2)
		fintantque
		succ(elementPop2) = elementPop
	finsi
	AjoutqueuePop(pop,indiv) = pop

• Trier la liste par Qualité décroissante des Individus au moyen de Quicksort (voir ci-dessous). On utilisera pour cela
la fonction Qualité définie sur le type abstrait Individu.

Entrée : Une population : pop
Sortie : Une population triée 
Quicksort( pop : population) --> Population trié
	si estVide(P) ou estVide(succ(P)) alors :
		Quicksort(pop) = pop
	Sinon :
		pivot = tete(pop)
		pop1 = creerPopulation() 
		pop2 = creerPopulation()
		actuel = succ(pop)
		tantque !estvide(actuel) faire :
			si qualité(individu(actuel)) > qualité(individu(pivot)) faire :
				AjoutTetePop(pop1, individu(actuel));
			sinon :
				AjoutTetePop(pop2, individu(actuel));
			finsi
			actuel = succ(actuel)
		fintantque
		pop1 = quicksort(pop1)
		pop2 = quicksort(pop2)
		si estvide(tete(pop1)) alors:
			tete(pop1)=pivot
		sinon :
			actuel = tete(pop1)
			tantque !estvide(succ(actuel)) faire :
				actuel = succ(actuel)
			fintantque
			succ(actuel) = pivot
		finsi
		succ(pivot) = tete(pop2)
		Quicksort(pop) = pop1
	finsi


• afficherPopulation
• affqualite
• Meilleur

• Sélectionner les meilleurs Individus de la Population en tronquant la liste et en la complétant par recopie des


tSelect premiers éléments.
• Croiser la pop
